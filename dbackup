#!/bin/bash

base_path="__database"
source "${base_path}/config"
#dump_table_data="'table 1' 'table 2'"
echo "DB Host Name: ${db_host_name}; DB User Name: ${db_user_name}; DB Password: ${db_password}; Database Name: ${database_name}; Dump Table Data: ${dump_table_data}"

function db_backup() {
  if [ ! -d "${base_path}/structure" ]
  then
    mkdir -p "${base_path}/structure"
  fi
  if [ ! -d "${base_path}/data" ]
  then
    mkdir -p "${base_path}/data"
  fi
  if [[ ${db_full_backup} == 'yes' ]]
  then
    if [ ! -d "${base_path}/full" ]
	then
	  mkdir -p "${base_path}/full"
	fi
  fi
  #eval rm "${base_path}/data/*"

  if [[ ${development_env} == 'xampp' ]]
  then
    ${mysqldump_path} --routines --no-data --compact -h "${db_host_name}" -u "${db_user_name}" -p"${db_password}" "${database_name}" > "${base_path}/structure/${database_name}.sql"
	if [[ ${db_full_backup} == 'yes' ]]
	then
	  ${mysqldump_path} --routines -h "${db_host_name}" -u "${db_user_name}" -p"${db_password}" "${database_name}" > "${base_path}/full/${database_name}(full).sql"
	fi
	eval "${mysqldump_path} --routines --no-create-info --compact -h \"${db_host_name}\" -u \"${db_user_name}\" -p\"${db_password}\" \"${database_name}\" ${dump_table_data} > \"${base_path}/data/${database_name}(data).sql\""
  elif [[ ${development_env} == 'docker' ]]
  then
    echo 'Docker-Backup has not impemented yet.'
	exit
  elif [[ ${development_env} == 'vagrant' ]]
  then
    echo 'Vagrant-Backup has not impemented yet.'
	exit
  fi
}

function php_execute() {
  php_command="$1"
  ${php_path} ${php_command}
}

#function composer_execute() {}

function setup_environment {
  # Setup Composer
  ${php_path} -r "copy('https://getcomposer.org/installer', '${base_path}/composer-setup.php');"
  ${php_path} -r "if (hash_file('sha384', '${base_path}/composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('${base_path}/composer-setup.php'); } echo PHP_EOL;"
  ${php_path} ${base_path}/composer-setup.php --install-dir="${base_path}"
  ${php_path} -r "unlink('${base_path}/composer-setup.php');"
 
  # Setup [FakerPHP/Faker](https://github.com/FakerPHP/Faker)
  ${php_path} "${base_path}/composer.phar" --working-dir="${base_path}" require fakerphp/faker
}

function generate_data {
  table_name="$1"
  row_number="$2"
  if [[ "${table_name}" == '' || "${row_number}" == '' ]]
  then
    echo "Wrong Input! Enter both table-name and row-number."
	exit
  fi
  ${php_path} "${base_path}/generate-data.php" "${table_name}" "$row_number"
  #echo "Data generated successfully."
}

development_env="$1" # Development Environment: xampp/docker/vagrant
work_type="$2" # Work Type: backup/restore/fetch

if [[ ( ${development_env} != 'xampp' && ${development_env} != 'docker' && ${development_env} != 'vagrant' ) || ( ${work_type} != 'backup' && ${work_type} != 'php' && ${work_type} != 'setup' && ${work_type} != 'generate' ) ]]
then
  echo "Please Provide Argument-1 (xampp/docker/vagrant) and Argument-2 (backup/php/setup)"
  exit
fi

operating_system=$(uname -s)
if [[ ${development_env} == 'xampp' ]]
then
  if [[ ${operating_system} == 'Linux' ]]
  then
    mysqldump_path=''
    mysql_path=''
	php_path=''
	editor_open_command="${linux_editor} "
  else # Windows-OS
    mysqldump_path='../../mysql/bin/mysqldump.exe'
    mysql_path='../../mysql/bin/mysql.exe'
	php_path='../../php/php.exe'
	editor_open_command="start ${windows_editor} "
  fi
elif [[ ${development_env} == 'docker' ]]
then
  mysqldump_path='mysqldump'
  mysql_path='mysql'
elif [[ ${development_env} == 'vagrant' ]]
then
  mysqldump_path='/bin/mysqldump' # Laravel-Homestead
  mysql_path='/bin/mysql' # Laravel-Homestead
fi

db_full_backup='no'
if [[ "$3" == '--full-db' ]]
then
  db_full_backup='yes'
fi 

if [[ ${work_type} == 'backup' ]]
then
  db_backup
elif [[ ${work_type} == 'php' ]]
then
  php_execute "$3"
elif [[ ${work_type} == 'setup' ]]
then
  setup_environment
elif [[ ${work_type} == 'generate' ]]
then
  generate_data "$3" "$4"
fi
